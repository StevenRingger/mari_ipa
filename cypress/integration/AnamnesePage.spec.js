/* eslint-disable no-undef */
context("Anamnsese Page of existing anamnese", () => {
  beforeEach(() => {
    cy.visit('/anamnese/1')
    cy.url().should('eq', 'http://localhost:3000/anamnese/1')
  });

  describe('AnamnesePage', () => {
    it('Section with existing data gets loaded correctly', () => {
      cy.get('span#1').should('have.class', 'data')
      cy.get('[alt="1"]').click({ force: true })
      cy.get('span#1').should('have.class', 'active')
      cy.get(':nth-child(2) > .text-area').should('not.be.empty')
      cy.get('form > .btn-container > .btn').should('be.disabled')
      cy.get(':nth-child(2) > .btn-icon').should('be.disabled')
      cy.get(':nth-child(2) > .btn-container > .btn').should('not.be.disabled')
      cy.get(':nth-child(1) > .btn-icon').should('not.be.disabled')
    })

    it('Edit section with existing data and saving', () => {
      cy.get('[alt="1"]').click({ force: true })
      cy.get(':nth-child(2) > .text-area').clear()
      cy.get(':nth-child(2) > .text-area').type('Test')
      cy.get('form > .btn-container > .btn').should('not.be.disabled')
      cy.get('form > .btn-container > .btn').click()
      cy.get(':nth-child(2) > .btn-icon').should('not.be.disabled')
      cy.get(':nth-child(2) > .btn-icon').click()
      cy.get('div.fade.toast').should('have.css', 'opacity', '1')
      expect(cy.get('.toast-header').should("have.text", "Anamnese wurde erfolgreich gespeichert×Close"))
      cy.wait(5000)
      cy.get('div.fade.toast').should('have.css', 'opacity', '0')
    })

    it('Api request error, toast gets displayed', () => {
      cy.server()
      cy.route({ url: '/anamnese/1', status: 500, response: {} })
      cy.visit('/anamnese/1')
      cy.get('div.fade.toast').should('have.css', 'opacity', '1')
      expect(cy.get('.toast-header').should("have.text", "Daten konnten nicht geladen werden×Close"))
      cy.wait(5000)
      cy.get('div.fade.toast').should('have.css', 'opacity', '0')
    })
  })
  describe('TherapyMethod', () => {
    it('Adding therapy method recommendation to existing section', () => {
      cy.get('[alt="1"]').click({ force: true })
      cy.get(':nth-child(2) > .btn-container > .btn').click()
      cy.get('.section-light > form > :nth-child(3)').click()
      cy.get('.order-md-12 > :nth-child(2)').children().should('have.length', 2)
      cy.get('.section-light > form > :nth-child(3)').should('have.class', 'selected')
      cy.get('.section-light > form > .btn-container > .btn').click()
      cy.get('.order-md-12 > :nth-child(2)').children().should('have.length', 3)
      cy.get(':nth-child(2) > .btn-icon').click()
      cy.get('div.fade.toast').should('have.css', 'opacity', '1')
      expect(cy.get('.toast-header').should("have.text", "Anamnese wurde erfolgreich gespeichert×Close"))
      cy.wait(5000)
      cy.get('div.fade.toast').should('have.css', 'opacity', '0')
    })

    it('Adding new therapy method to existing section', () => {
      cy.get('[alt="1"]').click({ force: true })
      cy.get(':nth-child(2) > .btn-container > .btn').click()
      cy.get('.order-md-12 > :nth-child(2)').children().should('have.length', 2)
      cy.get('.cornered').type('test title')
      cy.get('.section-light > form > :nth-child(2) > .text-area').type('test description')
      cy.get('.section-light > form > .btn-container > .btn').click()
      cy.get('.order-md-12 > :nth-child(2)').children().should('have.length', 3)
      expect(cy.get('.order-md-12 > :nth-child(2) .therapy-method h4').should("have.text", "test title"))
      expect(cy.get('.col-10 > p').should("have.text", "test description"))
      cy.get(':nth-child(2) > .btn-icon').click()
      cy.get('div.fade.toast').should('have.css', 'opacity', '1')
      expect(cy.get('.toast-header').should("have.text", "Anamnese wurde erfolgreich gespeichert×Close"))
      cy.wait(5000)
      cy.get('div.fade.toast').should('have.css', 'opacity', '0')
    })
  })

  describe('Validation', () => {
    it('Subjektiv more than 1000 characters', () => {
      cy.get('[alt="1"]').click({ force: true })
      cy.get(':nth-child(2) > .text-area').clear()
      cy.get(':nth-child(2) > .text-area').type('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')
      cy.get('.App').click()
      cy.get('form > :nth-child(2) > .invalid-feedback').should('be.visible')
      expect(cy.get('form > :nth-child(2) > .invalid-feedback').should("have.text", "Zeichen Limit erreicht (max. 1000)"))
    })

    it('Objektiv more than 1000 characters', () => {
      cy.get('[alt="1"]').click({ force: true })
      cy.get(':nth-child(3) > .text-area').clear()
      cy.get(':nth-child(3) > .text-area').type('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')
      cy.get('.App').click()
      cy.get('form > :nth-child(3) > .invalid-feedback').should('be.visible')
      expect(cy.get('form > :nth-child(3) > .invalid-feedback').should("have.text", "Zeichen Limit erreicht (max. 1000)"))
    })

    it('Einschätzung more than 1000 characters', () => {
      cy.get('[alt="1"]').click({ force: true })
      cy.get(':nth-child(4) > .text-area').clear()
      cy.get(':nth-child(4) > .text-area').type('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')
      cy.get('.App').click()
      cy.get('form > :nth-child(4) > .invalid-feedback').should('be.visible')
      expect(cy.get('form > :nth-child(4) > .invalid-feedback').should("have.text", "Zeichen Limit erreicht (max. 1000)"))
    })

    it('Titlefield of therapieMethod more than 38 characters', () => {
      cy.get('[alt="1"]').click({ force: true })
      cy.get(':nth-child(2) > .btn-container > .btn').click()
      cy.get('.cornered').type('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')
      cy.get('.section-light > form > :nth-child(2) > .text-area').click()
      expect(cy.get('div[name="name"] > .invalid-feedback').should("have.text", "Zeichen Limit erreicht (max. 38)"))
      cy.get('div[name="name"] > .invalid-feedback').should('be.visible')
    })
    
    it('Beschreibung more than 1000 characters', () => {
      cy.get('[alt="1"]').click({ force: true })
      cy.get(':nth-child(2) > .btn-container > .btn').click()
      cy.get('.section-light > form > :nth-child(2) > .text-area').clear()
      cy.get('.section-light > form > :nth-child(2) > .text-area').type('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')
      cy.get('.cornered').click()
      cy.get('.section-light > form > :nth-child(2) > .invalid-feedback').should('be.visible')
      expect(cy.get('.section-light > form > :nth-child(2) > .invalid-feedback').should("have.text", "Zeichen Limit erreicht (max. 1000)"))
    })
  })
})

context("Create a new Anamnese", () => {
  describe('NewAnamnese', () => {
    it('Create new anamnese with two sections', () => {
      cy.visit('/anamnese/new')
      cy.url().should('eq', 'http://localhost:3000/anamnese/new')
      cy.get('[alt="2"]').click({ force: true })
      cy.get('[style="background-color: rgb(209, 129, 26);"] > .form-check-label').click()
      cy.get(':nth-child(2) > .text-area').type('Test Subjektiv')
      cy.get(':nth-child(3) > .text-area').type('Test Objektiv')
      cy.get(':nth-child(4) > .text-area').type('Test Einschätzung')
      cy.get('form > .btn-container > .btn').click()
      cy.get(':nth-child(2) > .btn-container > .btn').click()
      cy.get('.section-light > form > :nth-child(3)').click()
      cy.get('.section-light > form > .btn-container > .btn').click()
      cy.get('span#2').should('have.class', 'data')
      cy.get('[alt="4"]').click({ force: true })
      cy.get('[style="background-color: rgb(209, 129, 26);"] > .form-check-label').click()
      cy.get(':nth-child(2) > .text-area').type('Test Subjektiv 2')
      cy.get(':nth-child(3) > .text-area').type('Test Objektiv 2')
      cy.get(':nth-child(4) > .text-area').type('Test Einschätzung 2')
      cy.get('form > .btn-container > .btn').click()
      cy.get(':nth-child(2) > .btn-container > .btn').click()
      cy.get('.section-light > form > :nth-child(3)').click()
      cy.get('.section-light > form > .btn-container > .btn').click()
      cy.get('span#4').should('have.class', 'data')
      cy.get('[alt="2"]').click({ force: true })
      cy.get('#severity-4').should('be.checked')
      expect(cy.get(':nth-child(2) > .text-area').should("have.text", "Test Subjektiv"))
      expect(cy.get(':nth-child(3) > .text-area').should("have.text", "Test Objektiv"))
      expect(cy.get(':nth-child(4) > .text-area').should("have.text", "Test Einschätzung"))
      cy.get(':nth-child(2) > .btn-icon').click()
    })
  })
})